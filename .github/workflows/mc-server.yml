name: Minecraft Server

on:
  workflow_dispatch:  # 手动触发

jobs:
  mc-server:
    runs-on: ubuntu-latest
    steps:
      # 1. 安装 Java 17
      - name: 安装 Java 17
        run: sudo apt-get install -y openjdk-17-jdk

      # 2. 动态获取最新 PaperMC 版本和构建号
      - name: 获取 PaperMC 最新版本
        id: paper
        run: |
          # 获取最新版本号（例如 1.20.4）
          PAPER_VERSION=1.20.1
          echo "最新版本: $PAPER_VERSION"

          # 获取该版本的最新构建号
          PAPER_BUILD=$(curl -s "https://api.papermc.io/v2/projects/paper/versions/$PAPER_VERSION/builds" | jq -r '.builds[-1].build')
          echo "最新构建号: $PAPER_BUILD"

          # 输出变量供后续步骤使用
          echo "PAPER_VERSION=$PAPER_VERSION" >> $GITHUB_OUTPUT
          echo "PAPER_BUILD=$PAPER_BUILD" >> $GITHUB_OUTPUT

      # 3. 下载 PaperMC 服务端
      - name: 下载 PaperMC
        run: |
          wget "https://api.papermc.io/v2/projects/paper/versions/${{ steps.paper.outputs.PAPER_VERSION }}/builds/${{ steps.paper.outputs.PAPER_BUILD }}/downloads/paper-${{ steps.paper.outputs.PAPER_VERSION }}-${{ steps.paper.outputs.PAPER_BUILD }}.jar" -O server.jar

      # 4. 同意 EULA 协议
      - name: 同意 EULA
        run: echo "eula=true" > eula.txt

      # 5. 安装 Ngrok 并暴露端口
      - name: 设置 Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_TOKEN }}
          ngrok tcp 25565 --log=stdout > ngrok.log &
          sleep 10

      # 6. 获取公网地址
      - name: 获取连接地址
        run: |
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "================================"
          echo "连接地址: ${NGROK_URL}"
          echo "================================"

      # 7. 启动服务器
      - name: 启动 Minecraft 服务器
        run: |
          java -Xmx2G -Xms1G -jar server.jar nogui
        timeout-minutes: 360  # 6 小时限制
